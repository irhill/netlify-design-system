function createDrawerToggleButton(t){return{props:{class:{type:String},toggleDrawer:{type:String,required:!0},toggleDrawerOnly:{type:Boolean},toggleContent:{type:String}},mounted(){var t;this.classList.add(""+(this.props.class?`${this.props.class}`:"mcc-drawer-toggle-button")),this.id||(this.id=`${(t="mcc-drawer-toggle-button")?t+"-":""}${Date.now().toString(36)+Math.random().toString(36).substr(2)}`);const s=document.getElementById(this.props.toggleDrawer);(!s.classList.contains("mcc-drawer--show")&&!s.classList.contains("mcc-drawer--hide")||s.classList.contains("mcc-drawer--show"))&&this.classList.toggle("mu-is-active"),this.setAttribute("role","button"),this.setAttribute("aria-pressed","false"),this.addEventListener("click",(t=>{if(t.preventDefault(),t.stopPropagation(),!s)return void console.warn(`Unable to find draw ${this.props.toggleDrawer}`);if(this.props.toggleDrawerOnly)return s.classList.toggle("mcc-drawer--show"),s.classList.toggle("mcc-drawer--hide"),this.classList.toggle("mu-is-active"),void this.setAttribute("aria-pressed","true"===this.getAttribute("aria-pressed")?"false":"true");const e=document.getElementById(this.props.toggleContent);s.classList.contains("mcc-drawer--show")||s.classList.contains("mcc-drawer--hide")||(s.classList.add("mcc-drawer--show"),s.querySelector(".mcc-menu").classList.add("mcc-menu--show"));const r=Array.from(document.querySelectorAll(".mcc-menu--show")),i=r.find((t=>t.id===this.props.toggleContent));i&&s.classList.contains("mcc-drawer--show")?(s.classList.remove("mcc-drawer--show"),s.classList.add("mcc-drawer--hide"),this.classList.remove("mu-is-active"),this.setAttribute("aria-pressed","false"),i.classList.add("mcc-menu--hide")):!i&&s.classList.contains("mcc-drawer--show")&&e?(r.filter((t=>t.id!==this.props.toggleContent)).forEach((t=>t.classList.remove("mcc-menu--show"))),Array.from(document.querySelectorAll("mcc-drawer-toggle-button.mu-is-active")).filter((t=>t.id!==this.id)).forEach((t=>{t.classList.remove("mu-is-active"),t.setAttribute("aria-pressed","false")})),e.classList.add("mcc-menu--show"),this.classList.add("mu-is-active"),this.setAttribute("aria-pressed","true"),this.emit("toggle-content")):i||!s.classList.contains("mcc-drawer--show")||e?(e&&(s.classList.add("mcc-drawer--show"),s.classList.remove("mcc-drawer--hide")),r.filter((t=>t.id!==this.props.toggleContent)).forEach((t=>t.classList.remove("mcc-menu--show"))),!i&&e&&e.classList.add("mcc-menu--show"),Array.from(document.querySelectorAll("mcc-drawer-toggle-button.mu-is-active")).filter((t=>t.id!==this.id)).forEach((t=>{t.classList.remove("mu-is-active"),t.setAttribute("aria-pressed","false")})),this.classList.add("mu-is-active"),this.setAttribute("aria-pressed","true"),this.emit("toggle-content")):(s.classList.remove("mcc-drawer--show"),s.classList.add("mcc-drawer--hide"),Array.from(document.querySelectorAll("mcc-drawer-toggle-button.mu-is-active")).filter((t=>t.id!==this.id)).forEach((t=>{t.classList.remove("mu-is-active"),t.setAttribute("aria-pressed","false")})),this.classList.add("mu-is-active"),this.setAttribute("aria-pressed","true"),this.emit("toggle-content"))}))},render(){return t`${this.slots.default}`}}}const t="mcc-drawer-toggle-button",s={create({createComponent:s,html:e}){s(t,createDrawerToggleButton(e))}};export{s as drawToggleButton};
