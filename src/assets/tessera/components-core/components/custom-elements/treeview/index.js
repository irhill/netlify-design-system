const e="mcc-treeview",t={create({createComponent:t,html:n}){t(e,{methods:{getGroupElement(e,t,n){const a=document.createElement("details");t&&a.setAttribute("open",!0);const c=document.createElement("summary"),i=document.createElement("mcc-icon");i.setAttribute("aria_hidden",!0),i.classList.add("mcc-treeview__closed-icon"),n&&n.closed?(n.closed.iconSet&&i.setAttribute("icon-set",n.closed.iconSet),n.closed.icon&&i.setAttribute("name",n.closed.icon)):(i.setAttribute("icon-set","office"),i.setAttribute("name","folder"));const o=document.createElement("mcc-icon");o.setAttribute("aria_hidden",!0),o.classList.add("mcc-treeview__open-icon"),n&&n.open?(n.open.iconSet&&o.setAttribute("icon-set",n.open.iconSet),n.open.icon&&o.setAttribute("name",n.open.icon)):(o.setAttribute("icon-set","office"),o.setAttribute("name","opened_folder"));const r=document.createElement("span");return r.innerText=e.name,c.appendChild(i),c.appendChild(o),c.appendChild(r),a.appendChild(c),a},setData({data:e,expanded:t,icons:n}){const createTreeview=(e,a)=>{a.forEach((a=>{const c=document.createElement("li");if(a.metadata&&c.setAttribute("metadata",JSON.stringify(a.metadata)),Object.prototype.hasOwnProperty.call(a,"items")){const e=this.methods.getGroupElement(a,t,n),i=document.createElement("ul");i.classList.add("mcc-treeview__group"),i.setAttribute("role","group"),createTreeview(i,a.items),e.appendChild(i),c.appendChild(e)}else{const e=document.createElement("button");if(e.classList.add("mcc-button"),e.classList.add("mu-justify-content-start"),Object.prototype.hasOwnProperty.call(a,"icon")){const t=document.createElement("mcc-icon");t.setAttribute("name",a.icon),t.setAttribute("aria-hidden",!0),e.appendChild(t)}const t=document.createElement("span");t.classList.add("mcc-button__label"),t.innerHTML=a.name,e.appendChild(t),c.appendChild(e)}e.appendChild(c)}))};if(!e)return void console.error("<mcc-treeview>",'Required parameter "data" not provided. Treeview will not be rendered.');const a=document.createElement("ul");a.classList.add("mcc-treeview"),a.setAttribute("role","tree"),a.setAttribute("aria-labelledby","treeview"),createTreeview(a,e.items),this.methods.clearData(),this.appendChild(a)},getData(){const getChildData=e=>{const t=e.querySelectorAll(":scope > li");return Array.from(t).map((e=>{const t=e.getAttribute("metadata"),n=e.querySelector(":scope > details > summary");if(n){const e=n.querySelector("span").innerText,a=n.nextSibling;return{name:e,items:a&&getChildData(a),...t&&{metadata:JSON.parse(t)}}}{const n=e.querySelector(":scope > button"),a=n.querySelector(":scope > mcc-icon"),c=a&&a.getAttribute("name");return{name:n.querySelector("span").innerText,...c&&{icon:c},...t&&{metadata:JSON.parse(t)}}}}))},e=this.querySelector("ul.mcc-treeview");if(e)return{items:getChildData(e)};console.error("No treeview element to get data from!")},clearData(){for(;this.firstChild;)this.removeChild(this.firstChild)}},mounted(){this.setData=this.methods.setData,this.getData=this.methods.getData,this.clearData=this.methods.clearData}})}};export{t as treeview};
